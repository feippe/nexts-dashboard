{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/feippe/BYURepo/WDD430/dashboard/nexts-dashboard/app/lib/actions.ts"],"sourcesContent":["'use server';\n\nimport { z } from 'zod';\nimport { revalidatePath } from 'next/cache';\nimport { redirect } from 'next/navigation';\nimport postgres from 'postgres';\nimport { signIn } from '@/auth';\nimport { AuthError } from 'next-auth';\n\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\n \nconst FormSchema = z.object({\n  id: z.string(),\n  customerId: z.string({\n    invalid_type_error: 'Please select a customer.',\n  }),\n  amount: z.coerce\n    .number()\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\n  status: z.enum(['pending', 'paid'],{\n    invalid_type_error: 'Please select an invoice status.',\n  }),\n  date: z.string(),\n});\n \nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\n\nexport type State = {\n  errors?: {\n    customerId?: string[];\n    amount?: string[];\n    status?: string[];\n  };\n  message?: string | null;\n};\n\nexport async function createInvoice(prevState: State, formData: FormData) {\n  const validatedFields = CreateInvoice.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Create Invoice.',\n    };\n  }\n\n  const { customerId, amount, status } = validatedFields.data;\n  const amountInCents = amount * 100;\n  const date = new Date().toISOString().split('T')[0];\n\n  try {\n    await sql`\n      INSERT INTO invoices (customer_id, amount, status, date)\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\n    `;\n  } catch (error) {\n    // If a database error occurs, return a more specific error.\n    return {\n      message: 'Database Error: Failed to Create Invoice.',\n    };\n  }\n\n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nexport async function updateInvoice(\n  id: string,\n  prevState: State,\n  formData: FormData,\n) {\n  const validatedFields = UpdateInvoice.safeParse({\n    customerId: formData.get('customerId'),\n    amount: formData.get('amount'),\n    status: formData.get('status'),\n  });\n \n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: 'Missing Fields. Failed to Update Invoice.',\n    };\n  }\n \n  const { customerId, amount, status } = validatedFields.data;\n  const amountInCents = amount * 100;\n \n  try {\n    await sql`\n      UPDATE invoices\n      SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\n      WHERE id = ${id}\n    `;\n  } catch (error) {\n    return { message: 'Database Error: Failed to Update Invoice.' };\n  }\n \n  revalidatePath('/dashboard/invoices');\n  redirect('/dashboard/invoices');\n}\n\nexport async function deleteInvoice(id: string) {\n    throw new Error('Failed to Delete Invoice');\n    \n    await sql`DELETE FROM invoices WHERE id = ${id}`;\n    revalidatePath('/dashboard/invoices');\n}\n\nexport async function authenticate(\n  prevState: string | undefined,\n  formData: FormData,\n) {\n  try {\n    await signIn('credentials', formData);\n  } catch (error) {\n    if (error instanceof AuthError) {\n      switch (error.type) {\n        case 'CredentialsSignin':\n          return 'Invalid credentials.';\n        default:\n          return 'Something went wrong.';\n      }\n    }\n    throw error;\n  }\n}"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;AAEA,MAAM,MAAM,IAAA,wMAAQ,EAAC,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAEjE,MAAM,aAAa,wMAAC,CAAC,MAAM,CAAC;IAC1B,IAAI,wMAAC,CAAC,MAAM;IACZ,YAAY,wMAAC,CAAC,MAAM,CAAC;QACnB,oBAAoB;IACtB;IACA,QAAQ,wMAAC,CAAC,MAAM,CACb,MAAM,GACN,EAAE,CAAC,GAAG;QAAE,SAAS;IAA0C;IAC9D,QAAQ,wMAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAO,EAAC;QACjC,oBAAoB;IACtB;IACA,MAAM,wMAAC,CAAC,MAAM;AAChB;AAEA,MAAM,gBAAgB,WAAW,IAAI,CAAC;IAAE,IAAI;IAAM,MAAM;AAAK;AAC7D,MAAM,gBAAgB,WAAW,IAAI,CAAC;IAAE,IAAI;IAAM,MAAM;AAAK;AAWtD,eAAe,cAAc,SAAgB,EAAE,QAAkB;IACtE,MAAM,kBAAkB,cAAc,SAAS,CAAC;QAC9C,YAAY,SAAS,GAAG,CAAC;QACzB,QAAQ,SAAS,GAAG,CAAC;QACrB,QAAQ,SAAS,GAAG,CAAC;IACvB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,QAAQ,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;YACnD,SAAS;QACX;IACF;IAEA,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,IAAI;IAC3D,MAAM,gBAAgB,SAAS;IAC/B,MAAM,OAAO,IAAI,OAAO,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;IAEnD,IAAI;QACF,MAAM,GAAG,CAAC;;cAEA,EAAE,WAAW,EAAE,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,EAAE,KAAK;IAC7D,CAAC;IACH,EAAE,OAAO,OAAO;QACd,4DAA4D;QAC5D,OAAO;YACL,SAAS;QACX;IACF;IAEA,IAAA,6RAAc,EAAC;IACf,IAAA,+UAAQ,EAAC;AACX;AAEO,eAAe,cACpB,EAAU,EACV,SAAgB,EAChB,QAAkB;IAElB,MAAM,kBAAkB,cAAc,SAAS,CAAC;QAC9C,YAAY,SAAS,GAAG,CAAC;QACzB,QAAQ,SAAS,GAAG,CAAC;QACrB,QAAQ,SAAS,GAAG,CAAC;IACvB;IAEA,IAAI,CAAC,gBAAgB,OAAO,EAAE;QAC5B,OAAO;YACL,QAAQ,gBAAgB,KAAK,CAAC,OAAO,GAAG,WAAW;YACnD,SAAS;QACX;IACF;IAEA,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,gBAAgB,IAAI;IAC3D,MAAM,gBAAgB,SAAS;IAE/B,IAAI;QACF,MAAM,GAAG,CAAC;;wBAEU,EAAE,WAAW,WAAW,EAAE,cAAc,WAAW,EAAE,OAAO;iBACnE,EAAE,GAAG;IAClB,CAAC;IACH,EAAE,OAAO,OAAO;QACd,OAAO;YAAE,SAAS;QAA4C;IAChE;IAEA,IAAA,6RAAc,EAAC;IACf,IAAA,+UAAQ,EAAC;AACX;AAEO,eAAe,cAAc,EAAU;IAC1C,MAAM,IAAI,MAAM;IAEhB,MAAM,GAAG,CAAC,gCAAgC,EAAE,GAAG,CAAC;IAChD,IAAA,6RAAc,EAAC;AACnB;AAEO,eAAe,aACpB,SAA6B,EAC7B,QAAkB;IAElB,IAAI;QACF,MAAM,IAAA,8GAAM,EAAC,eAAe;IAC9B,EAAE,OAAO,OAAO;QACd,IAAI,iBAAiB,iNAAS,EAAE;YAC9B,OAAQ,MAAM,IAAI;gBAChB,KAAK;oBACH,OAAO;gBACT;oBACE,OAAO;YACX;QACF;QACA,MAAM;IACR;AACF;;;IA7FsB;IAkCA;IAmCA;IAOA;;AA5EA,6XAAA;AAkCA,6XAAA;AAmCA,6XAAA;AAOA,6XAAA","debugId":null}},
    {"offset": {"line": 151, "column": 0}, "map": {"version":3,"sources":["file:///Users/feippe/BYURepo/WDD430/dashboard/nexts-dashboard/.next-internal/server/app/dashboard/invoices/create/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '001111063a9a6e18cfd6ec7e9540c180e8a62afd4a'} from 'ACTIONS_MODULE0'\nexport {createInvoice as '60bc81ac90bf90782ce603aabd990c6a91d3ffce2e'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}}]
}